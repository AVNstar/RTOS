

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 21 21:11:05 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x5E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F675 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0019                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0096                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0019                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  008C                     	;# 
   100  008E                     	;# 
   101  0090                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0096                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0001                     _TMR0	set	1
   114  0005                     _GPIO	set	5
   115  0019                     _CMCON	set	25
   116  005D                     _T0IE	set	93
   117  005E                     _PEIE	set	94
   118  005F                     _GIE	set	95
   119  005A                     _T0IF	set	90
   120  002A                     _GPIO2	set	42
   121  0029                     _GPIO1	set	41
   122  0028                     _GPIO0	set	40
   123  0085                     _TRISIO	set	133
   124  009F                     _ANSEL	set	159
   125  0099                     _VRCON	set	153
   126  040A                     _PS2	set	1034
   127  0409                     _PS1	set	1033
   128  0408                     _PS0	set	1032
   129  040B                     _PSA	set	1035
   130  040C                     _T0SE	set	1036
   131  040D                     _T0CS	set	1037
   132                           
   133                           ; #config settings
   134  0000                     
   135                           	psect	cinit
   136  000C                     start_initialization:	
   137  000C                     __initialization:	
   138                           
   139                           ; Clear objects allocated to BANK0
   140  000C  1283               	bcf	3,5	;RP0=0, select bank0
   141  000D  01A8               	clrf	__pbssBANK0& (0+127)
   142  000E  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   143  000F                     end_of_initialization:	
   144                           ;End of C runtime variable initialization code
   145                           
   146  000F                     __end_of__initialization:	
   147  000F  0183               	clrf	3
   148  0010  2811               	ljmp	_main	;jump to C main() function
   149                           
   150                           	psect	bssBANK0
   151  0028                     __pbssBANK0:	
   152  0028                     _tick:	
   153  0028                     	ds	2
   154                           
   155                           	psect	cstackCOMMON
   156  0000                     __pcstackCOMMON:	
   157  0000                     ??_TMR0_Init:	
   158  0000                     ??_main:	
   159                           ; 1 bytes @ 0x0
   160                           
   161                           
   162                           	psect	cstackBANK0
   163  0020                     __pcstackBANK0:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0020                     ?_TMR0_Init:	
   167  0020                     ?_main:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0020                     ?_ISR:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0020                     ??_ISR:	
   174                           ; 1 bytes @ 0x0
   175                           
   176                           
   177                           ; 1 bytes @ 0x0
   178  0020                     	ds	2
   179  0022                     ?___lwmod:	
   180  0022                     ___lwmod@divisor:	
   181                           ; 2 bytes @ 0x2
   182                           
   183                           
   184                           ; 2 bytes @ 0x2
   185  0022                     	ds	2
   186  0024                     ___lwmod@dividend:	
   187                           
   188                           ; 2 bytes @ 0x4
   189  0024                     	ds	2
   190  0026                     ??___lwmod:	
   191                           
   192                           ; 1 bytes @ 0x6
   193  0026                     	ds	1
   194  0027                     ___lwmod@counter:	
   195                           
   196                           ; 1 bytes @ 0x7
   197  0027                     	ds	1
   198                           
   199                           	psect	maintext
   200  0011                     __pmaintext:	
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 49 in file "RTOS_3LEDS_2.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, pclath, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : B00/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMMON   BANK0
   220 ;;      Params:         0       0
   221 ;;      Locals:         0       0
   222 ;;      Temps:          0       0
   223 ;;      Totals:         0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels required when called:    2
   226 ;; This function calls:
   227 ;;		_TMR0_Init
   228 ;;		___lwmod
   229 ;; This function is called by:
   230 ;;		Startup code after reset
   231 ;; This function uses a non-reentrant model
   232 ;;
   233                           
   234                           
   235                           ;psect for function _main
   236  0011                     _main:	
   237                           
   238                           ;RTOS_3LEDS_2.c: 50:     PS1 = 1;
   239                           
   240                           ;incstack = 0
   241                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   242  0011  1683               	bsf	3,5	;RP0=1, select bank1
   243  0012  0199               	clrf	25	;volatile
   244                           
   245                           ;RTOS_3LEDS_2.c: 51:     PS2 = 1;
   246  0013  3007               	movlw	7
   247  0014  1283               	bcf	3,5	;RP0=0, select bank0
   248  0015  0099               	movwf	25	;volatile
   249                           
   250                           ;RTOS_3LEDS_2.c: 52: }
   251  0016  1683               	bsf	3,5	;RP0=1, select bank1
   252  0017  019F               	clrf	31	;volatile
   253  0018  1283               	bcf	3,5	;RP0=0, select bank0
   254  0019  0185               	clrf	5	;volatile
   255  001A  1683               	bsf	3,5	;RP0=1, select bank1
   256  001B  0185               	clrf	5	;volatile
   257  001C  2094               	fcall	_TMR0_Init
   258  001D                     l784:	
   259  001D  3032               	movlw	50
   260  001E  1283               	bcf	3,5	;RP0=0, select bank0
   261  001F  00A2               	movwf	___lwmod@divisor
   262  0020  3000               	movlw	0
   263  0021  00A3               	movwf	___lwmod@divisor+1
   264  0022  0829               	movf	_tick+1,w
   265  0023  00A5               	movwf	___lwmod@dividend+1
   266  0024  0828               	movf	_tick,w
   267  0025  00A4               	movwf	___lwmod@dividend
   268  0026  204F               	fcall	___lwmod
   269  0027  1283               	bcf	3,5	;RP0=0, select bank0
   270  0028  0822               	movf	?___lwmod,w
   271  0029  0423               	iorwf	?___lwmod+1,w
   272  002A  1D03               	btfss	3,2
   273  002B  282E               	goto	l788
   274  002C  3001               	movlw	1
   275  002D  0685               	xorwf	5,f
   276  002E                     l788:	
   277  002E  3046               	movlw	70
   278  002F  00A2               	movwf	___lwmod@divisor
   279  0030  3000               	movlw	0
   280  0031  00A3               	movwf	___lwmod@divisor+1
   281  0032  0829               	movf	_tick+1,w
   282  0033  00A5               	movwf	___lwmod@dividend+1
   283  0034  0828               	movf	_tick,w
   284  0035  00A4               	movwf	___lwmod@dividend
   285  0036  204F               	fcall	___lwmod
   286  0037  1283               	bcf	3,5	;RP0=0, select bank0
   287  0038  0822               	movf	?___lwmod,w
   288  0039  0423               	iorwf	?___lwmod+1,w
   289  003A  1D03               	btfss	3,2
   290  003B  283E               	goto	l792
   291  003C  3002               	movlw	2
   292  003D  0685               	xorwf	5,f
   293  003E                     l792:	
   294  003E  30DC               	movlw	220
   295  003F  00A2               	movwf	___lwmod@divisor
   296  0040  3000               	movlw	0
   297  0041  00A3               	movwf	___lwmod@divisor+1
   298  0042  0829               	movf	_tick+1,w
   299  0043  00A5               	movwf	___lwmod@dividend+1
   300  0044  0828               	movf	_tick,w
   301  0045  00A4               	movwf	___lwmod@dividend
   302  0046  204F               	fcall	___lwmod
   303  0047  1283               	bcf	3,5	;RP0=0, select bank0
   304  0048  0822               	movf	?___lwmod,w
   305  0049  0423               	iorwf	?___lwmod+1,w
   306  004A  1D03               	btfss	3,2
   307  004B  281D               	goto	l784
   308  004C  3004               	movlw	4
   309  004D  0685               	xorwf	5,f
   310  004E  281D               	goto	l784
   311  004F                     __end_of_main:	
   312                           
   313                           	psect	text1
   314  004F                     __ptext1:	
   315 ;; *************** function ___lwmod *****************
   316 ;; Defined at:
   317 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;  divisor         2    2[BANK0 ] unsigned int 
   320 ;;  dividend        2    4[BANK0 ] unsigned int 
   321 ;; Auto vars:     Size  Location     Type
   322 ;;  counter         1    7[BANK0 ] unsigned char 
   323 ;; Return value:  Size  Location     Type
   324 ;;                  2    2[BANK0 ] unsigned int 
   325 ;; Registers used:
   326 ;;		wreg, status,2, status,0
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0
   332 ;;      Params:         0       4
   333 ;;      Locals:         0       1
   334 ;;      Temps:          0       1
   335 ;;      Totals:         0       6
   336 ;;Total ram usage:        6 bytes
   337 ;; Hardware stack levels used:    1
   338 ;; Hardware stack levels required when called:    1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		_main
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           
   347                           ;psect for function ___lwmod
   348  004F                     ___lwmod:	
   349                           
   350                           ;incstack = 0
   351                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   352  004F  1283               	bcf	3,5	;RP0=0, select bank0
   353  0050  0822               	movf	___lwmod@divisor,w
   354  0051  0423               	iorwf	___lwmod@divisor+1,w
   355  0052  1903               	btfsc	3,2
   356  0053  287D               	goto	l768
   357  0054  01A7               	clrf	___lwmod@counter
   358  0055  0AA7               	incf	___lwmod@counter,f
   359  0056                     l758:	
   360  0056  1BA3               	btfsc	___lwmod@divisor+1,7
   361  0057  2864               	goto	l760
   362  0058  3001               	movlw	1
   363  0059                     u125:	
   364  0059  1003               	clrc
   365  005A  0DA2               	rlf	___lwmod@divisor,f
   366  005B  0DA3               	rlf	___lwmod@divisor+1,f
   367  005C  3EFF               	addlw	-1
   368  005D  1D03               	skipz
   369  005E  2859               	goto	u125
   370  005F  3001               	movlw	1
   371  0060  00A6               	movwf	??___lwmod
   372  0061  0826               	movf	??___lwmod,w
   373  0062  07A7               	addwf	___lwmod@counter,f
   374  0063  2856               	goto	l758
   375  0064                     l760:	
   376  0064  0823               	movf	___lwmod@divisor+1,w
   377  0065  0225               	subwf	___lwmod@dividend+1,w
   378  0066  1D03               	skipz
   379  0067  286A               	goto	u145
   380  0068  0822               	movf	___lwmod@divisor,w
   381  0069  0224               	subwf	___lwmod@dividend,w
   382  006A                     u145:	
   383  006A  1C03               	skipc
   384  006B  2872               	goto	l764
   385  006C  0822               	movf	___lwmod@divisor,w
   386  006D  02A4               	subwf	___lwmod@dividend,f
   387  006E  0823               	movf	___lwmod@divisor+1,w
   388  006F  1C03               	skipc
   389  0070  03A5               	decf	___lwmod@dividend+1,f
   390  0071  02A5               	subwf	___lwmod@dividend+1,f
   391  0072                     l764:	
   392  0072  3001               	movlw	1
   393  0073                     u155:	
   394  0073  1003               	clrc
   395  0074  0CA3               	rrf	___lwmod@divisor+1,f
   396  0075  0CA2               	rrf	___lwmod@divisor,f
   397  0076  3EFF               	addlw	-1
   398  0077  1D03               	skipz
   399  0078  2873               	goto	u155
   400  0079  3001               	movlw	1
   401  007A  02A7               	subwf	___lwmod@counter,f
   402  007B  1D03               	btfss	3,2
   403  007C  2864               	goto	l760
   404  007D                     l768:	
   405  007D  0825               	movf	___lwmod@dividend+1,w
   406  007E  00A3               	movwf	?___lwmod+1
   407  007F  0824               	movf	___lwmod@dividend,w
   408  0080  00A2               	movwf	?___lwmod
   409  0081  0008               	return
   410  0082                     __end_of___lwmod:	
   411                           
   412                           	psect	text2
   413  0094                     __ptext2:	
   414 ;; *************** function _TMR0_Init *****************
   415 ;; Defined at:
   416 ;;		line 82 in file "RTOS_3LEDS_2.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0
   430 ;;      Params:         0       0
   431 ;;      Locals:         0       0
   432 ;;      Temps:          0       0
   433 ;;      Totals:         0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; Hardware stack levels required when called:    1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _TMR0_Init
   446  0094                     _TMR0_Init:	
   447                           
   448                           ;incstack = 0
   449                           ; Regs used in _TMR0_Init: [wreg]
   450  0094  30FC               	movlw	252
   451  0095  1283               	bcf	3,5	;RP0=0, select bank0
   452  0096  0081               	movwf	1	;volatile
   453  0097  178B               	bsf	11,7	;volatile
   454  0098  170B               	bsf	11,6	;volatile
   455  0099  168B               	bsf	11,5	;volatile
   456  009A  110B               	bcf	11,2	;volatile
   457  009B  1683               	bsf	3,5	;RP0=1, select bank1
   458  009C  1281               	bcf	1,5	;volatile
   459  009D  1601               	bsf	1,4	;volatile
   460  009E  1181               	bcf	1,3	;volatile
   461  009F  1401               	bsf	1,0	;volatile
   462  00A0  1481               	bsf	1,1	;volatile
   463  00A1  1501               	bsf	1,2	;volatile
   464  00A2  0008               	return
   465  00A3                     __end_of_TMR0_Init:	
   466                           
   467                           	psect	text3
   468  0082                     __ptext3:	
   469 ;; *************** function _ISR *****************
   470 ;; Defined at:
   471 ;;		line 72 in file "RTOS_3LEDS_2.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0
   485 ;;      Params:         0       0
   486 ;;      Locals:         0       0
   487 ;;      Temps:          0       2
   488 ;;      Totals:         0       2
   489 ;;Total ram usage:        2 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		Interrupt level 1
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           
   499                           ;psect for function _ISR
   500  0082                     _ISR:	
   501  0082  1D0B               	btfss	11,2	;volatile
   502  0083  288D               	goto	i1l59
   503  0084  3001               	movlw	1
   504  0085  07A8               	addwf	_tick,f
   505  0086  1803               	skipnc
   506  0087  0AA9               	incf	_tick+1,f
   507  0088  3000               	movlw	0
   508  0089  07A9               	addwf	_tick+1,f
   509  008A  30FC               	movlw	252
   510  008B  0081               	movwf	1	;volatile
   511  008C  110B               	bcf	11,2	;volatile
   512  008D                     i1l59:	
   513  008D  0821               	movf	??_ISR+1,w
   514  008E  008A               	movwf	10
   515  008F  0E20               	swapf	??_ISR^0,w
   516  0090  0083               	movwf	3
   517  0091  0EDE               	swapf	94,f
   518  0092  0E5E               	swapf	94,w
   519  0093  0009               	retfie
   520  0094                     __end_of_ISR:	
   521  005E                     btemp	set	94	;btemp
   522  005E                     wtemp0	set	94
   523                           
   524                           	psect	intentry
   525  0004                     __pintentry:	
   526                           ;incstack = 0
   527                           ; Regs used in _ISR: [wreg]
   528                           
   529  0004                     interrupt_function:	
   530  005E                     saved_w	set	btemp
   531  0004  00DE               	movwf	btemp
   532  0005  0E03               	swapf	3,w
   533  0006  1283               	bcf	3,5	;RP0=0, select bank0
   534  0007  00A0               	movwf	??_ISR
   535  0008  080A               	movf	10,w
   536  0009  00A1               	movwf	??_ISR+1
   537  000A  2882               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      8      10

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwmod

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     615
                          _TMR0_Init
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     615
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR0_Init
   ___lwmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      8       A       4       16.1%
ABS                  0      0       A       5        0.0%
DATA                 0      0       A       6        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 21 21:11:05 2021

            __CFG_CP$OFF 0000                      l760 0064                      l764 0072  
                    l758 0056                      l768 007D                      l792 003E  
                    l784 001D                      l788 002E                      _GIE 005F  
                    u125 0059                      u145 006A                      u155 0073  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
           __CFG_CPD$OFF 0000                      _ISR 0082                      _PSA 040B  
                   ?_ISR 0020                     _T0IE 005D                     _T0IF 005A  
                   _T0CS 040D                     _T0SE 040C                     _GPIO 0005  
                   _PEIE 005E                     i1l59 008D                     _TMR0 0001  
                   _main 0011                     _tick 0028                     btemp 005E  
                   start 000B                    ??_ISR 0020                    ?_main 0020  
          __CFG_WDTE$OFF 0000                    _CMCON 0019                    _ANSEL 009F  
                  _GPIO0 0028                    _GPIO1 0029                    _GPIO2 002A  
        __end_of___lwmod 0082                    _VRCON 0099       __size_of_TMR0_Init 000F  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 005E           __CFG_MCLRE$OFF 0000          __initialization 000C  
           __end_of_main 004F                   ??_main 0000                   _TRISIO 0085  
         __CFG_PWRTE$OFF 0000        __end_of_TMR0_Init 00A3                ??___lwmod 0026  
                 saved_w 005E  __end_of__initialization 000F           __pcstackCOMMON 0000  
             __pbssBANK0 0028               __pmaintext 0011               __pintentry 0004  
                ___lwmod 004F                  __ptext1 004F                  __ptext2 0094  
                __ptext3 0082             __size_of_ISR 0012     end_of_initialization 000F  
              _TMR0_Init 0094               ?_TMR0_Init 0020      start_initialization 000C  
            __end_of_ISR 0094                ___latbits 0000            __pcstackBANK0 0020  
               ?___lwmod 0022              ??_TMR0_Init 0000        interrupt_function 0004  
       __size_of___lwmod 0033            __size_of_main 003E                 intlevel1 0000  
       ___lwmod@dividend 0024          ___lwmod@divisor 0022          ___lwmod@counter 0027  
      __CFG_FOSC$INTRCIO 0000  
